class Solution {
public:
    bool still = false;
    int nodeHeight(TreeNode* root) {
        if(!root) return 0;
        if((!root->left) && (!root->right)) return 1;
        if(root->left || root->right) return 1 + max(nodeHeight(root->left), nodeHeight(root->right));
        
        return 0;
    }
    
    int difference(TreeNode* root) {
        if(!root) return 0;
        int diff = abs(nodeHeight(root->left) - nodeHeight(root->right));
        return diff;
    }
    
    bool isBalanced(TreeNode* root) {
        if(!root || (!root->left && !root->right)) return true;
        
        if(root->left || root->right) still = (difference(root) <= 1) && (difference(root->left) <= 1) && (difference(root->right) <= 1);
        
        return still && isBalanced(root->left) && isBalanced(root->right);
       
    }
        
};
